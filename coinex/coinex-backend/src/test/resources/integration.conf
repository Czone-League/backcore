include "serialization"

akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = false
    event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    loglevel = INFO
    loggers = ["akka.event.slf4j.Slf4jLogger"]

    extensions = [
        "akka.contrib.pattern.DistributedPubSubExtension",
        "akka.contrib.pattern.ClusterReceptionistExtension"
    ]

    debug {
        lifecycle = off
        receive = off
    }

    mailer-dispatcher {
        type = "Dispatcher"
        executor = "thread-pool-executor"
        throughput = 20
        thread-pool-executor {
          core-pool-size-min = 4
          core-pool-size-factor = 2.0
          core-pool-size-max = 16
        }
    }

    cluster-dispatcher {
        type = "Dispatcher"
        executor = "fork-join-executor"
        throughput = 50
        fork-join-executor {
            parallelism-min = 2
            parallelism-factor = 2.0
            parallelism-max = 16
        }
    }

    actor {
        provider = "akka.cluster.ClusterActorRefProvider"
        serialize-messages = off # this will be off in production

        deployment {
            /mailer {
                router = round-robin-pool
                nr-of-instances = 10
                depatcher = "akka.mailer-dispatcher"
            }
            "/mailer/*" {
                depatcher = "akka.mailer-dispatcher"
            }
        }
    }

    remote {
        enabled-transports = ["akka.remote.netty.tcp"]
        netty.tcp {
           hostname = "localhost"
           port = 25549
        }
    }

    persistence {
        view.auto-update-interval = 100ms

        journal.plugin = "akka-contrib-mongodb-persistence-journal"
        #journal.plugin = "hbase-journal"

        snapshot-store.plugin = "akka-contrib-mongodb-persistence-snapshot"
        #snapshot-store.plugin = "hadoop-snapshot-store"

        # we need event publishing for tests
        # publish-confirmations = on
        publish-plugin-commands = off

        # disable leveldb (default store impl)
        journal.leveldb.native = off
    }

    contrib.persistence.mongodb.mongo {
        urls = ["localhost:52345"]
        db = "integration_testing_coinex"
        journal-collection = "events"
        journal-index = "messages_index"
        snaps-collection = "snapshots"
        snaps-index = "snapshots_index"
    }


    cluster {
        use-dispatcher = "akka.cluster-dispatcher"
        auto-down-unreachable-after = 2s
        seed-nodes = [
           "akka.tcp://coinex@localhost:25549"
        ]
    }

    exchange {
        secret = ";e3Tfq&-D+/PaFYTf1N2Uh.Y@j9d`<yY~c^eA%T~h:zA|[nm^*wN^lO?$qb^&"
        mailer.mandrill-api-key = "YqW5g_wxhP0rSwV59-QbOQ"
        monitor.http-port = 25550
        mongo-uri-for-readers = "mongodb://localhost:52345/integration_testing_coinex_views"
        mongo-uri-for-events = "mongodb://localhost:52345/integration_testing_coinex_export"
        fee-rules-path = "integration_fee_rules.scala"
        opendata.export-interval-seconds = 900
    }

    opendata {
        enabled-export = false
        processors-map-path = "integration_open_data_config.scala"
        hdfs-host = "hdfs://weichaoli:54310"
        messages-batch-size = 2
        export-snapshot-hdfs-dir = "/export/snapshot/"
        export-messages-hdfs-dir = "/export/messages/"
    }
}

hbase-journal {
  table = "messages"
  family = "a"
  partition.count= 1
  scan-batch-size = 50
  hdfs-default-name = "hdfs://weichaoli:54310"
  snapshot-dir = "/snapshot/"
  publish-testing-events = off

  # For HBase sync
  plugin-dispatcher = "akka-hbase-persistence-dispatcher"

  # Original config
  replay-dispatcher = "default-replay-dispatcher"

  class = "akka.persistence.hbase.journal.HBaseAsyncWriteJournal"
  hbase {
    cluster.distributed = false
    zookeeper.quorum = "weichaoli:2181"
  }
}

hadoop-snapshot-store {
  table = "snapshot"
  family = "a"
  partition.count= 1
  scan-batch-size = 50
  hdfs-default-name = "hdfs://weichaoli:54310"
  snapshot-dir = "/snapshot/"
  publish-testing-events = off
  class = "akka.persistence.hbase.snapshot.HadoopSnapshotStore"

  # For HBase sync
  plugin-dispatcher = "akka-hbase-persistence-dispatcher"

  # Original config
  replay-dispatcher = "default-replay-dispatcher"

  impl = "akka.persistence.hbase.snapshot.HdfsSnapshotter"
  #impl = "akka.persistence.hbase.snapshot.HBaseSnapshotter"
  hbase {
    cluster.distributed = false
    zookeeper.quorum = "weichaoli:2181"
  }
}

akka-hbase-persistence-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    core-pool-size-min = 2
    core-pool-size-factor = 2.0
    core-pool-size-max = 10
  }
  throughput = 100
}

default-replay-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
        parallelism-min = 2
        parallelism-max = 8
    }
}
