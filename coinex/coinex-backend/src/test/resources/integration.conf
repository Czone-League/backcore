include "serialization"
include "state_serialization"

akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = false
    event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
    loglevel = ERROR
    loggers = ["akka.event.slf4j.Slf4jLogger"]

    extensions = [
        "akka.contrib.pattern.DistributedPubSubExtension",
        "akka.contrib.pattern.ClusterReceptionistExtension"
    ]

    debug {
        lifecycle = off
        receive = off
    }

    mailer-dispatcher {
        type = "Dispatcher"
        executor = "thread-pool-executor"
        throughput = 20
        thread-pool-executor {
          core-pool-size-min = 4
          core-pool-size-factor = 2.0
          core-pool-size-max = 16
        }
    }

    cluster-dispatcher {
        type = "Dispatcher"
        executor = "fork-join-executor"
        throughput = 50
        fork-join-executor {
            parallelism-min = 2
            parallelism-factor = 2.0
            parallelism-max = 16
        }
    }

    actor {
        provider = "akka.cluster.ClusterActorRefProvider"
        serialize-messages = off # this will be off in production

        deployment {
            /mailer {
                router = round-robin-pool
                nr-of-instances = 10
                depatcher = "akka.mailer-dispatcher"
            }
            "/mailer/*" {
                depatcher = "akka.mailer-dispatcher"
            }
        }
    }

    remote {
        enabled-transports = ["akka.remote.netty.tcp"]
        netty.tcp {
           hostname = "localhost"
           port = 25549
        }
    }

    persistence {
        view.auto-update-interval = 100ms
        journal.plugin = "akka-contrib-mongodb-persistence-journal"
        snapshot-store.plugin = "akka-contrib-mongodb-persistence-snapshot"
    }

    contrib.persistence.mongodb.mongo {
        urls = ["localhost:52345"]
        db = "integration_testing_coinex"
        journal-collection = "events"
        journal-index = "messages_index"
        snaps-collection = "snapshots"
        snaps-index = "snapshots_index"
    }


    cluster {
        use-dispatcher = "akka.cluster-dispatcher"
        auto-down-unreachable-after = 2s
        seed-nodes = [
           "akka.tcp://coinex@localhost:25549"
        ]
    }

    exchange {
        secret = ";e3Tfq&-D+/PaFYTf1N2Uh.Y@j9d`<yY~c^eA%T~h:zA|[nm^*wN^lO?$qb^&"
        mailer.mandrill-api-key = "YqW5g_wxhP0rSwV59-QbOQ"
        monitor.http-port = 25550
        mongo-uri-for-views = "mongodb://localhost:52345/integration_testing_coinex_views"
        mongo-uri-for-data-export = "mongodb://localhost:52345/integration_testing_coinex_export"
        fee-rules-path = "integration_fee_rules.scala"
    }
}
