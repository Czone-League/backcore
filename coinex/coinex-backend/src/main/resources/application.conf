include "serialization"
include "state_serialization"

akka {
	log-dead-letters = 1
	log-dead-letters-during-shutdown = false
	loglevel = DEBUG
	loggers = ["akka.event.slf4j.Slf4jLogger"]
	
	extensions = [
		"akka.contrib.pattern.DistributedPubSubExtension",
		"akka.contrib.pattern.ClusterReceptionistExtension"
	]

	debug {
		lifecycle = on
		receive = on
	}

	actor {
		provider = "akka.cluster.ClusterActorRefProvider"
		serialize-messages = on # this will be off in production
	}
	
	remote {
		enabled-transports = ["akka.remote.netty.tcp"]
		#netty.tcp {
		#	hostname = "192.168.0.103"
		#	port = 0
		#}
	}
	
	persistence {
		view.auto-update-interval = 100ms
		journal.plugin = "akka-contrib-mongodb-persistence-journal"
		snapshot-store.plugin = "akka-contrib-mongodb-persistence-snapshot"
	}
	
	contrib.persistence.mongodb.mongo {
		urls = ["localhost:27017"]
		db = "coinex"
		journal-collection = "events"
		journal-index = "messages_index"
		snaps-collection = "snapshots"
		snaps-index = "snapshots_index"
	}
	
	cluster {
		#roles = [
		#"market_processor_btc_rmb",
		#"market_depth_view_btc_rmb",
		#"user_processor", 
		#"account_processor",
		#"marke_update_processor", 
		#"user_view", 
		#"account_view",
		#"user_orders_view",
		#"candle_data_view_btc_rmb"
		#]
		auto-down-unreachable-after = 2s
		role {
			# user_processor.min-nr-of-members = 1
			# account_processor.min-nr-of-members = 1
			# market_processor_btc_rmb.min-nr-of-members = 1
			# marke_update_processor.min-nr-of-members = 1
		}
		#seed-nodes = [
		#	"akka.tcp://coinex@192.168.0.103:25551"
		#]
	}
}