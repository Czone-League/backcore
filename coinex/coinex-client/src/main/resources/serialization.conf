
#
# Copyright (C) 2014 Coinport Inc. <http://www.coinport.com>
#
# This file was auto generated by auto_gen_serializer.sh on Thu Mar 27 19:57:53 CST 2014

akka {
  actor {
    serializers {
      bytes = "akka.serialization.ByteArraySerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
      akka-containers = "akka.remote.serialization.MessageContainerSerializer"
      daemon-create = "akka.remote.serialization.DaemonMsgCreateSerializer"
      akka-cluster = "akka.cluster.protobuf.ClusterMessageSerializer"
      akka-pubsub = "akka.contrib.pattern.protobuf.DistributedPubSubMessageSerializer"
      akka-persistence-snapshot = "akka.persistence.serialization.SnapshotSerializer"
      akka-persistence-message = "akka.persistence.serialization.MessageSerializer"
      event = "com.coinport.coinex.serializers.EventSerializer"
    }
    serialization-bindings {
      "[B" = bytes
      "akka.event.Logging$LogEvent" = bytes
      "com.google.protobuf.GeneratedMessage" = proto
      "com.google.protobuf.Message" = proto
      "akka.actor.ActorSelectionMessage" = akka-containers
      "akka.remote.DaemonMsgCreate" = daemon-create
      "akka.cluster.ClusterMessage" = akka-cluster
      "akka.contrib.pattern.DistributedPubSubMessage" = akka-pubsub
      "akka.persistence.serialization.Snapshot" = akka-persistence-snapshot
      "akka.persistence.serialization.Message" = akka-persistence-message
      
      "com.coinport.coinex.data.AccountOperationResult" = event
      "com.coinport.coinex.data.ApiSecret" = event
      "com.coinport.coinex.data.ApiSecrets" = event
      "com.coinport.coinex.data.CandleData" = event
      "com.coinport.coinex.data.CandleDataItem" = event
      "com.coinport.coinex.data.CashAccount" = event
      "com.coinport.coinex.data.DoAddNewApiSecret" = event
      "com.coinport.coinex.data.DoCancelOrder" = event
      "com.coinport.coinex.data.DoConfirmCashWithdrawalFailed" = event
      "com.coinport.coinex.data.DoConfirmCashWithdrawalSuccess" = event
      "com.coinport.coinex.data.DoDeleteApiSecret" = event
      "com.coinport.coinex.data.DoDepositCash" = event
      "com.coinport.coinex.data.DoRegisterUser" = event
      "com.coinport.coinex.data.DoRequestCashWithdrawal" = event
      "com.coinport.coinex.data.DoRequestPasswordReset" = event
      "com.coinport.coinex.data.DoResetPassword" = event
      "com.coinport.coinex.data.DoSubmitOrder" = event
      "com.coinport.coinex.data.Login" = event
      "com.coinport.coinex.data.LoginFailed" = event
      "com.coinport.coinex.data.LoginSucceeded" = event
      "com.coinport.coinex.data.MarketByMetrics" = event
      "com.coinport.coinex.data.MarketDepth" = event
      "com.coinport.coinex.data.MarketDepthItem" = event
      "com.coinport.coinex.data.MarketSide" = event
      "com.coinport.coinex.data.Order" = event
      "com.coinport.coinex.data.OrderCancelled" = event
      "com.coinport.coinex.data.OrderCashLocked" = event
      "com.coinport.coinex.data.OrderInfo" = event
      "com.coinport.coinex.data.OrderSubmissionDone" = event
      "com.coinport.coinex.data.OrderSubmissionFailed" = event
      "com.coinport.coinex.data.OrderSubmissionInProgross" = event
      "com.coinport.coinex.data.OrderSubmitted" = event
      "com.coinport.coinex.data.OrderUpdate" = event
      "com.coinport.coinex.data.PersistentAccountState" = event
      "com.coinport.coinex.data.QueryAccount" = event
      "com.coinport.coinex.data.QueryAccountResult" = event
      "com.coinport.coinex.data.QueryApiSecrets" = event
      "com.coinport.coinex.data.QueryCandleData" = event
      "com.coinport.coinex.data.QueryCandleDataResult" = event
      "com.coinport.coinex.data.QueryMarket" = event
      "com.coinport.coinex.data.QueryMarketResult" = event
      "com.coinport.coinex.data.QueryMarketUnsupportedMarketFailure" = event
      "com.coinport.coinex.data.QueryTransactionData" = event
      "com.coinport.coinex.data.QueryTransactionDataResult" = event
      "com.coinport.coinex.data.QueryUserOrders" = event
      "com.coinport.coinex.data.QueryUserOrdersResult" = event
      "com.coinport.coinex.data.QueryUserTransaction" = event
      "com.coinport.coinex.data.QueryUserTransactionResult" = event
      "com.coinport.coinex.data.RegisterUserFailed" = event
      "com.coinport.coinex.data.RegisterUserSucceeded" = event
      "com.coinport.coinex.data.RequestPasswordResetFailed" = event
      "com.coinport.coinex.data.RequestPasswordResetSucceeded" = event
      "com.coinport.coinex.data.ResetPasswordFailed" = event
      "com.coinport.coinex.data.ResetPasswordSucceeded" = event
      "com.coinport.coinex.data.RobotMetrics" = event
      "com.coinport.coinex.data.SendMailRequest" = event
      "com.coinport.coinex.data.Transaction" = event
      "com.coinport.coinex.data.TransactionData" = event
      "com.coinport.coinex.data.TransactionItem" = event
      "com.coinport.coinex.data.UserAccount" = event
      "com.coinport.coinex.data.UserLogsState" = event
      "com.coinport.coinex.data.UserProfile" = event
      "com.coinport.coinex.data.ValidateApiSignature" = event
      "com.coinport.coinex.data.ValidatePasswordResetToken" = event
      "com.coinport.coinex.data.ValidatePasswordResetTokenResult" = event
    }  
  }
}
